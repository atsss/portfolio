{"version":3,"sources":["App.js","serviceWorker.js","index.js","assets/images/profile.jpg","assets/images/payment.jpg","assets/images/search.jpg"],"names":["Header","Content","Footer","Title","Paragraph","Text","Section","children","className","App","style","color","lineHeight","level","gutter","span","alt","src","profile","payment","underline","href","target","search","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"6SASQA,E,IAAAA,OAAQC,E,IAAAA,QAASC,E,IAAAA,OACjBC,E,IAAAA,MAAOC,E,IAAAA,UAAWC,E,IAAAA,KAEpBC,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAkB,6BAASC,UAAU,WAAWD,IAgFjDE,EA9EH,kBACV,uBAAQD,UAAU,UAChB,kBAACR,EAAD,CAAQQ,UAAU,UAChB,kBAACL,EAAD,CAAOO,MAAO,CAAEC,MAAO,OAAQC,WAAY,SAA3C,wBAEF,kBAACX,EAAD,CAASO,UAAU,WACjB,kBAAC,EAAD,KACE,kBAACL,EAAD,CAAOU,MAAO,GAAd,SACA,uBAAKC,OAAQ,IACX,uBAAKN,UAAU,aAAaO,KAAM,GAChC,yBACEC,IAAI,UACJC,IAAKC,IACLV,UAAU,WAGd,uBAAKA,UAAU,aAAaO,KAAM,IAChC,kBAACX,EAAD,gCACA,kBAACA,EAAD,gEACA,kBAACA,EAAD,mEACA,kBAACA,EAAD,gFACA,kBAACA,EAAD,sCACA,kBAACA,EAAD,2CACA,kBAACA,EAAD,4DACA,kBAACA,EAAD,4CAIN,kBAAC,EAAD,KACE,kBAACD,EAAD,CAAOU,MAAO,GAAd,SACA,4BACE,4BACE,uBAAKC,OAAQ,IACX,uBAAKN,UAAU,aAAaO,KAAM,GAChC,yBACEC,IAAI,UACJC,IAAKE,IACLX,UAAU,WAGd,uBAAKA,UAAU,aAAaO,KAAM,IAChC,kBAACZ,EAAD,CAAOU,MAAO,GAAd,uBACA,kBAACT,EAAD,kIACA,kBAACA,EAAD,yDACA,kBAACA,EAAD,yEACA,kBAACC,EAAD,CAAMe,WAAS,GACb,uBAAGC,KAAK,mGAAmGC,OAAO,SAAlH,oBAKR,wBAAId,UAAU,UACZ,uBAAKM,OAAQ,IACX,uBAAKN,UAAU,aAAaO,KAAM,GAChC,yBACEC,IAAI,SACJC,IAAKM,IACLf,UAAU,WAGd,uBAAKA,UAAU,aAAaO,KAAM,IAChC,kBAACZ,EAAD,CAAOU,MAAO,GAAd,sBACA,kBAACT,EAAD,mIACA,kBAACA,EAAD,yDACA,kBAACA,EAAD,kEACA,kBAACC,EAAD,CAAMe,WAAS,GACb,uBAAGC,KAAK,mGAAmGC,OAAO,SAAlH,uBAQd,kBAACpB,EAAD,CAAQM,UAAU,UAAlB,qDC5EgBgB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,mBErInBC,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,oC","file":"static/js/main.85e42499.chunk.js","sourcesContent":["import React from 'react';\nimport { Layout } from 'antd';\nimport { Typography } from 'antd';\nimport { Row, Col } from 'antd';\nimport './App.sass';\nimport profile from './assets/images/profile.jpg';\nimport payment from './assets/images/payment.jpg';\nimport search from './assets/images/search.jpg';\n\nconst { Header, Content, Footer } = Layout;\nconst { Title, Paragraph, Text } = Typography;\n\nconst Section = ({ children }) => <section className=\"section\">{children}</section>;\n\nconst App = () => (\n  <Layout className=\"layout\">\n    <Header className=\"header\">\n      <Title style={{ color: '#fff', lineHeight: '64px' }}>Atsushi's Portfolio</Title>\n    </Header>\n    <Content className=\"content\">\n      <Section>\n        <Title level={2}>About</Title>\n        <Row gutter={16}>\n          <Col className=\"gutter-row\" span={6}>\n            <img\n              alt=\"profile\"\n              src={profile}\n              className=\"image\"\n            />\n          </Col>\n          <Col className=\"gutter-row\" span={18}>\n            <Paragraph>My name is Atsushi Ito.</Paragraph>\n            <Paragraph>I was born in Oslo, Norway and grew up in Tokyo, Japan.</Paragraph>\n            <Paragraph>Now I'm studying Interaction Design at CIID in Costa Rica.</Paragraph>\n            <Paragraph>I used to work for a startup as a software engineer and UI/UX designer.</Paragraph>\n            <Paragraph>I love technology and design.</Paragraph>\n            <Paragraph>contact: atsushi0623itoh@gmail.com</Paragraph>\n            <Paragraph>Facebook: https://www.facebook.com/atsushi.ito.7758</Paragraph>\n            <Paragraph>Github: https://github.com/atsss</Paragraph>\n          </Col>\n        </Row>\n      </Section>\n      <Section>\n        <Title level={2}>Works</Title>\n        <ul>\n          <li>\n            <Row gutter={16}>\n              <Col className=\"gutter-row\" span={6}>\n                <img\n                  alt=\"payment\"\n                  src={payment}\n                  className=\"image\"\n                />\n              </Col>\n              <Col className=\"gutter-row\" span={18}>\n                <Title level={3}>Local Works Payment</Title>\n                <Paragraph>Local Works Payment is a QR payment service for small and medium-sized enterprises in the Japanese construction industry.</Paragraph>\n                <Paragraph>I was in charge of development and UI/UX design.</Paragraph>\n                <Paragraph>I researched UX. Then I did coding web/native app and UI design.</Paragraph>\n                <Text underline>\n                  <a href=\"https://docs.google.com/document/d/1a9eFUsWiF2P6MPvbS-NG2DVKteF5CIzDLYXUAG-1nzA/edit?usp=sharing\" target=\"blank\">more details</a>\n                </Text>\n              </Col>\n            </Row>\n          </li>\n          <li className=\"u-mt24\">\n            <Row gutter={16}>\n              <Col className=\"gutter-row\" span={6}>\n                <img\n                  alt=\"search\"\n                  src={search}\n                  className=\"image\"\n                />\n              </Col>\n              <Col className=\"gutter-row\" span={18}>\n                <Title level={3}>Local Works Search</Title>\n                <Paragraph>Local Works Search is a job matching service for small and medium-sized enterprises in the Japanese construction industry.</Paragraph>\n                <Paragraph>I was in charge of development and UI/UX design.</Paragraph>\n                <Paragraph>I researched UX. Then I did coding web app and UI design.</Paragraph>\n                <Text underline>\n                  <a href=\"https://docs.google.com/document/d/1sj17XyrbsAV-m15hzrt3lX7wtsEazl7t4VbVQTbIyQw/edit?usp=sharing\" target=\"blank\">more details</a>\n                </Text>\n              </Col>\n            </Row>\n          </li>\n        </ul>\n      </Section>\n    </Content>\n    <Footer className=\"footer\">Atsushi's Portfolio Â©2020 Created by Atsushi</Footer>\n  </Layout>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/profile.76c72522.jpg\";","module.exports = __webpack_public_path__ + \"static/media/payment.802dfba0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/search.68907e7a.jpg\";"],"sourceRoot":""}